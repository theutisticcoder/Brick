(()=>{const ensureVpCommonApi=()=>{let vpCommonApi=window['vpCommonApi'];if(vpCommonApi!=null){return vpCommonApi;}
vpCommonApi={};window['vpCommonApi']=vpCommonApi;return vpCommonApi;};const ensureInjectJs=()=>{const vpCommonApi=ensureVpCommonApi();let injectJs=vpCommonApi['injectJs'];if(injectJs!=null){return injectJs;}
injectJs=(key,url,options,injectOptions)=>{if(injectOptions==null)injectOptions={};if(!injectOptions.document)injectOptions.document=document;const workingDocument=injectOptions.document;if(!workingDocument.body&&!workingDocument.head){return new Promise((resolve,reject)=>{setTimeout(()=>{injectJs(key,url,options).then(resolve).catch(reject);},500);});}
const existingScriptElement=workingDocument.querySelector(`script[key="${key}"][by="injectJs"]`);if(existingScriptElement!=null){return existingScriptElement.ensureLoad();}
return new Promise((resolve,reject)=>{try{const scriptElement=workingDocument.createElement('script');scriptElement.setAttribute('key',key);scriptElement.setAttribute('type','text/javascript');scriptElement.setAttribute('by','injectJs');options&&Object.keys(options).map(key=>{const value=options[key];scriptElement.setAttribute(key,value);});const promises=[{resolve,reject}];let onloadResult=null;let onerrorResult;scriptElement.onload=()=>{scriptElement.onload=()=>{};onloadResult=true;promises.map(({resolve})=>{resolve(true);});promises.length=0;};scriptElement.onerror=(error)=>{onloadResult=false;onerrorResult=error;promises.map(({reject})=>{reject(error);});promises.length=0;};scriptElement.ensureLoad=()=>{if(onloadResult!=null&&onloadResult==true){return Promise.resolve(true);}else if(onloadResult!=null&&onloadResult==false){return Promise.reject(onerrorResult);}else{return new Promise((resolve,reject)=>{promises.push({resolve,reject});});}};scriptElement.setAttribute('src',url);(workingDocument.body||workingDocument.head).appendChild(scriptElement);}catch(error){reject(error);}})};vpCommonApi['injectJs']=injectJs;return injectJs;};ensureInjectJs();const ensureWaitForJs=()=>{const vpCommonApi=ensureVpCommonApi();let waitForJs=vpCommonApi['waitForJs'];if(waitForJs!=null){return waitForJs;}
waitForJs=(key,waitOptions)=>{if(waitOptions==null)waitOptions={};if(!waitOptions.document)waitOptions.document=document;const workingDocument=waitOptions.document;const existingScriptElement=workingDocument.querySelector(`script[key="${key}"][by="injectJs"]`);if(existingScriptElement!=null){return existingScriptElement.ensureLoad();}else{return Promise.reject('NOT EXIST');}};vpCommonApi['waitForJs']=waitForJs;return waitForJs;};ensureWaitForJs();const ensureStorage=(storageKey)=>{const vpCommonApi=ensureVpCommonApi();let storage=vpCommonApi[storageKey];if(storage!=null){return storage;}
const createStorage=()=>{const storage={data:{},key:(index)=>{return Object.keys(storage.data)[index];},getItem:(keyName)=>{return storage.data[keyName];},setItem:(keyName,keyValue)=>{storage.data[keyName]=keyValue;},removeItem:(keyName)=>{delete storage.data[keyName];},clear:(keyName)=>{storage.data={};},};Object.defineProperty(storage,'length',{get(){return Object.keys(storage.data).length;}});return storage;};if(window.parent!==window){storage=createStorage();}else{storage=window[storageKey];}
vpCommonApi[storageKey]=storage;return storage;};ensureStorage('localStorage');ensureStorage('sessionStorage');})();